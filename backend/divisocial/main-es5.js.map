{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/app-routing.module.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/auth.interceptor.ts","webpack:///src/app/endpoint/auth.service.ts","webpack:///src/app/endpoint/posts.service.ts","webpack:///src/app/guards/auth.guard.ts","webpack:///src/app/layout/header/header.component.ts","webpack:///src/app/layout/header/header.component.html","webpack:///src/app/layout/home/home.component.ts","webpack:///src/app/layout/home/home.component.html","webpack:///src/app/layout/home/post-card/post-card.component.ts","webpack:///src/app/layout/home/post-card/post-card.component.html","webpack:///src/app/layout/sidenav/sidenav.component.ts","webpack:///src/app/layout/sidenav/sidenav.component.html","webpack:///src/app/material/material.module.ts","webpack:///src/app/model/auth.interface.ts","webpack:///src/app/store/actions/auth.actions.ts","webpack:///src/app/store/actions/post.actions.ts","webpack:///src/app/store/app.state.ts","webpack:///src/app/store/effects/auth.effects.ts","webpack:///src/app/store/effects/post.effects.ts","webpack:///src/app/store/reducers/auth.reducer.ts","webpack:///src/app/store/reducers/post.reducer.ts","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","routes","path","component","loadChildren","m","AuthModule","canActivate","CreatePostModule","AppRoutingModule","forRoot","scrollPositionRestoration","preloadingStrategy","imports","providers","AppComponent","authService","store","authToken","getToken","dispatch","selector","templateUrl","styleUrls","AppModule","provide","useClass","multi","instrument","maxAge","logOnly","production","declarations","bootstrap","AuthInterceptor","next","authRequest","clone","headers","set","handle","BACKEND_URL","apiUrl","AuthService","http","localStorage","getItem","email","password","authData","post","providedIn","PostsService","imagePath","postData","FormData","append","title","content","i","length","reportProgress","observe","postsPerPage","currentPage","queryParams","get","AuthGuard","router","route","state","isAuth","select","subscribe","val","isAuthStore","navigate","HeaderComponent","sidenavToggle","authSub","unsubscribe","userIsAuthenticated","emit","openSideMenu","HomeComponent","postsSub","posts","PostCardComponent","customOptions","loop","mouseDrag","touchDrag","pullDrag","center","dots","margin","autoHeight","navSpeed","items","stagePadding","SidenavComponent","closeSidenav","onClose","MaterialModule","UploadStatus","featureKey","loginRequest","loginSuccess","loginFailure","createUserRequest","createUserSuccess","createUserFailure","authTrue","authFalse","logout","addPostRequest","addPostSuccess","addPostFailure","getPostsRequest","getPostsSuccess","getPostsFailure","getPostRequest","getPostSuccess","getPostFailure","cancelUpload","startedUpload","resetUpload","progressUpload","completedUpload","uploadFailure","globalSuccess","globalError","reducers","auth","AuthEffects","actions$","CreateUserRequest$","pipe","action","payload","data","createUser","x","console","log","res","error","CreateUserSuccess$","user","LoginRequest$","login","token","LoginSuccess$","setItem","Logout$","removeItem","PostsEffects","postService","AddPostRequest$","addPost","event","getActionHttpEvent","OnAddPostSuccess$","GetPostsRequest$","getPosts","refresh","type","Sent","UploadProgress","progress","Math","round","loaded","total","ResponseHeader","Response","status","errorMessage","statusText","initialState","isAuthenticated","loading","authReducer","reducer","authState","getIsAuth","isLoadingAuth","totalPosts","page","uploadStatus","Ready","propertyReducer","postsCount","Started","Failed","postsState","getPost","getPostsPerPage","getPage","isLoadingPost","getTotalPosts","getStarted","getRequested","Requested","getReady","getProgress","getFailed","getCompleted","Completed","getInProgress","environment","bootstrapModule","err"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule, PreloadAllModules } from '@angular/router';\nimport { AuthGuard } from './guards/auth.guard';\nimport { HomeComponent } from './layout/home/home.component';\n\n\nconst routes: Routes = [\n  { path: '', component: HomeComponent },\n  {\n    path: 'auth',\n    loadChildren: () => import('./modules/auth/auth.module').then(m => m.AuthModule)\n  },\n  {\n    path: 'create',\n    canActivate: [AuthGuard],\n    loadChildren: () => import('./modules/create-post/create-post.module').then(m => m.CreatePostModule)\n  },\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes, { scrollPositionRestoration: 'enabled', preloadingStrategy: PreloadAllModules })],\n  exports: [RouterModule],\n  providers: [AuthGuard]\n})\nexport class AppRoutingModule { }\n","import { Component, OnInit } from '@angular/core';\nimport { Store } from '@ngrx/store';\nimport { AuthService } from './endpoint/auth.service';\nimport { authFalse, authTrue } from './store/actions/auth.actions';\nimport { AppState } from './store/app.state';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent implements OnInit {\n\n  constructor(\n    private authService: AuthService,\n    private store: Store<AppState>) { }\n\n  ngOnInit() {\n    const authToken = this.authService.getToken();\n    if (!authToken) {\n      this.store.dispatch(authFalse());\n    } else {\n      this.store.dispatch(authTrue());\n    }\n\n  }\n}\n","<mat-sidenav-container>\n  <mat-sidenav #sidenav role=\"navigation\" position=\"end\" fixedInViewport='true'>\n    <app-sidenav (closeSidenav)=\"sidenav.close()\"></app-sidenav>\n  </mat-sidenav>\n  <mat-sidenav-content>\n    <app-header (sidenavToggle)=\"sidenav.toggle()\" class=\"fixed-top\"></app-header>\n    <main>\n      <router-outlet></router-outlet>\n    </main>\n  </mat-sidenav-content>\n</mat-sidenav-container>\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { MaterialModule } from './material/material.module';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { HeaderComponent } from './layout/header/header.component';\nimport { SidenavComponent } from './layout/sidenav/sidenav.component';\nimport { StoreDevtoolsModule } from '@ngrx/store-devtools';\nimport { environment } from 'src/environments/environment';\nimport { HomeComponent } from './layout/home/home.component';\nimport { StoreModule } from '@ngrx/store';\nimport { reducers } from './store/app.state';\nimport { EffectsModule } from '@ngrx/effects';\nimport { AuthEffects } from './store/effects/auth.effects';\nimport { HttpClientModule, HTTP_INTERCEPTORS } from '@angular/common/http';\nimport { AuthInterceptor } from './auth.interceptor';\nimport { PostsEffects } from './store/effects/post.effects';\nimport { PostCardComponent } from './layout/home/post-card/post-card.component';\nimport { CarouselModule } from 'ngx-owl-carousel-o';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    HeaderComponent,\n    SidenavComponent,\n    HomeComponent,\n    PostCardComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    HttpClientModule,\n    BrowserAnimationsModule,\n    MaterialModule,\n    ReactiveFormsModule,\n    CarouselModule,\n    StoreModule.forRoot(reducers, {}),\n    EffectsModule.forRoot([AuthEffects, PostsEffects]),\n    StoreDevtoolsModule.instrument({ maxAge: 25, logOnly: environment.production }),\n  ],\n  providers: [\n    { provide: HTTP_INTERCEPTORS, useClass: AuthInterceptor, multi: true }\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import {\r\n  HttpInterceptor,\r\n  HttpRequest,\r\n  HttpHandler\r\n} from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { AuthService } from './endpoint/auth.service';\r\n\r\n\r\n@Injectable()\r\nexport class AuthInterceptor implements HttpInterceptor {\r\n  constructor(private authService: AuthService) { }\r\n\r\n  intercept(req: HttpRequest<any>, next: HttpHandler) {\r\n    const authToken = this.authService.getToken();\r\n    const authRequest = req.clone({\r\n      headers: req.headers.set('Authorization', 'Bearer ' + authToken)\r\n    });\r\n    return next.handle(authRequest);\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { environment } from '../../environments/environment';\nimport { User } from '../model/auth.interface';\n\nconst BACKEND_URL = environment.apiUrl + '/user';\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthService {\n\n\n  constructor(private http: HttpClient) { }\n\n\n  getToken() {\n    return localStorage.getItem('token');\n  }\n\n  createUser(email: string, password: string) {\n    const authData: User = { email, password };\n    return this.http.post(BACKEND_URL + '/signup', authData);\n  }\n\n  login(email: string, password: string) {\n    const authData: User = { email, password };\n    return this.http\n      .post<{ token: string; expiresIn: number; email: string }>(\n        BACKEND_URL + '/login',\n        authData\n      );\n  }\n\n}\n","import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { environment } from 'src/environments/environment';\nimport { Post, PostsResponse } from '../model/auth.interface';\n\nconst BACKEND_URL = environment.apiUrl;\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class PostsService {\n\n  constructor(private http: HttpClient) { }\n\n  addPost(post: Post, imagePath: Array<File>): Observable<any> {\n\n    const postData = new FormData();\n    postData.append('title', post.title);\n    postData.append('content', post.content);\n\n    for (let i = 0; i < imagePath.length; i++) {\n      postData.append('imagePath', imagePath[i]);\n    }\n\n    return this.http.post<any>(BACKEND_URL + '/posts', postData, { reportProgress: true, observe: 'events' });\n  }\n\n  getPosts(postsPerPage: number, currentPage: number): Observable<PostsResponse> {\n    const queryParams = `?pagesize=${postsPerPage}&page=${currentPage}`;\n    return this.http.get<PostsResponse>(BACKEND_URL + '/posts' + queryParams);\n  }\n\n}\n","import {\r\n  CanActivate,\r\n  ActivatedRouteSnapshot,\r\n  RouterStateSnapshot,\r\n  Router\r\n} from '@angular/router';\r\nimport { Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\nimport { Store } from '@ngrx/store';\r\nimport { AuthService } from '../endpoint/auth.service';\r\nimport { getIsAuth } from '../store/reducers/auth.reducer';\r\n\r\n\r\n@Injectable()\r\nexport class AuthGuard implements CanActivate {\r\n  isAuthStore: boolean;\r\n  constructor(\r\n    private authService: AuthService,\r\n    private router: Router,\r\n    private store: Store) { }\r\n\r\n  canActivate(\r\n    route: ActivatedRouteSnapshot,\r\n    state: RouterStateSnapshot\r\n  ): boolean | Observable<boolean> | Promise<boolean> {\r\n    const isAuth = this.authService.getToken();\r\n    this.store.select(getIsAuth).subscribe(val => this.isAuthStore = val);\r\n    if (!isAuth) {\r\n      this.router.navigate(['auth/login']);\r\n      return false;\r\n    }\r\n    if (isAuth && this.isAuthStore === true) {\r\n      return true;\r\n    }\r\n  }\r\n}\r\n","import { Component, EventEmitter, OnDestroy, OnInit, Output } from '@angular/core';\nimport { Store } from '@ngrx/store';\nimport { Subscription } from 'rxjs';\nimport { logout } from 'src/app/store/actions/auth.actions';\nimport { AppState } from 'src/app/store/app.state';\nimport { getIsAuth } from 'src/app/store/reducers/auth.reducer';\n\n@Component({\n  selector: 'app-header',\n  templateUrl: './header.component.html',\n  styleUrls: ['./header.component.scss']\n})\nexport class HeaderComponent implements OnInit, OnDestroy {\n\n  @Output() sidenavToggle = new EventEmitter();\n  userIsAuthenticated: boolean;\n  authSub: Subscription;\n\n  constructor(private store: Store<AppState>) { }\n\n  ngOnDestroy(): void {\n    this.authSub.unsubscribe();\n  }\n\n  ngOnInit() {\n    this.authSub = this.store.select(getIsAuth).subscribe(isAuth => this.userIsAuthenticated = isAuth);\n  }\n\n  onLogout() {\n    this.store.dispatch(logout());\n  }\n\n  openSideMenu() {\n    this.sidenavToggle.emit();\n  }\n}\n","<mat-toolbar color=\"primary\" class=\"mat-elevation-z10\">\n  <span>\n    <a routerLink=\"/\">Divi Social</a>\n  </span>\n  <span class=\"spacer\"></span>\n  <ul class=\"d-none d-md-flex\">\n    <li *ngIf=\" userIsAuthenticated\">\n      <a mat-button routerLink=\"/create\" routerLinkActive=\"mat-accent\">New Post</a>\n    </li>\n    <li *ngIf=\"!userIsAuthenticated\">\n      <a mat-button routerLink=\"/auth/login\" routerLinkActive=\"mat-accent\">Login</a>\n    </li>\n    <li *ngIf=\"!userIsAuthenticated\">\n      <a mat-button routerLink=\"/auth/signup\" routerLinkActive=\"mat-accent\">Signup</a>\n    </li>\n    <li *ngIf=\"userIsAuthenticated\">\n      <a mat-button matTooltip=\"Logout\">\n        <mat-icon (click)=\"onLogout()\">power_settings_new</mat-icon>\n      </a>\n    </li>\n  </ul>\n  <button mat-button class=\"d-md-none col-xs-3\" (click)=\"openSideMenu()\">\n    <mat-icon>menu</mat-icon>\n  </button>\n</mat-toolbar>\n","import { Component, OnDestroy, OnInit } from '@angular/core';\nimport { Store } from '@ngrx/store';\nimport { Subscription } from 'rxjs';\nimport { Post } from 'src/app/model/auth.interface';\nimport { getPostsRequest } from 'src/app/store/actions/post.actions';\nimport { AppState } from 'src/app/store/app.state';\nimport { getPosts } from 'src/app/store/reducers/post.reducer';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.scss']\n})\nexport class HomeComponent implements OnInit, OnDestroy {\n\n  posts: Array<Post>;\n  postsSub: Subscription;\n\n  constructor(private store: Store<AppState>) { }\n\n  ngOnInit() {\n    this.store.dispatch(getPostsRequest({ postsPerPage: 50, currentPage: 1 }));\n    this.postsSub = this.store.select(getPosts).subscribe(posts => this.posts = posts);\n  }\n\n  ngOnDestroy() {\n    this.postsSub.unsubscribe();\n  }\n\n}\n","<div class=\"container\">\n  <div class=\"row\">\n    <div class=\"col-md-6 m-auto\">\n      <ng-container *ngFor=\"let post of posts\">\n        <app-post-card [post]=\"post\"></app-post-card>\n      </ng-container>\n    </div>\n  </div>\n</div>\n","import { Component, Input, OnInit } from '@angular/core';\nimport { OwlOptions } from 'ngx-owl-carousel-o';\nimport { Post } from 'src/app/model/auth.interface';\n\n@Component({\n  selector: 'app-post-card',\n  templateUrl: './post-card.component.html',\n  styleUrls: ['./post-card.component.scss']\n})\nexport class PostCardComponent implements OnInit {\n\n  @Input() post: Post;\n\n  customOptions: OwlOptions = {\n    loop: false,\n    mouseDrag: true,\n    touchDrag: true,\n    pullDrag: true,\n    center: true,\n    dots: false,\n    margin: 5,\n    autoHeight: true,\n    navSpeed: 700,\n    items: 1,\n    stagePadding: 0,\n  };\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","<mat-card class=\"mb-4\">\n  <mat-card-header>\n    <mat-card-title>\n      {{ post.title | uppercase}}\n    </mat-card-title>\n    <mat-card-subtitle class=\"d-flex align-items-center my-2\">\n      <mat-icon inline>calendar_today</mat-icon> &nbsp;\n      <span class=\"align-middle\">{{ post.date | date }}</span>\n    </mat-card-subtitle>\n  </mat-card-header>\n  <owl-carousel-o [options]=\"customOptions\">\n\n    <ng-template *ngFor=\"let slide of post.imagePath\" carouselSlide [id]=\"slide\">\n      <div class=\"img-container\">\n        <img [src]=\"slide\" [alt]=\"post.title\" [title]=\"post.title\" class=\"main-img\">\n      </div>\n    </ng-template>\n\n  </owl-carousel-o>\n  <mat-card-content>\n    <p class=\"mt-2\">{{ post.content }}</p>\n  </mat-card-content>\n</mat-card>\n","import { Component, EventEmitter, OnDestroy, OnInit, Output } from '@angular/core';\nimport { Store } from '@ngrx/store';\nimport { Observable, Subscription } from 'rxjs';\nimport { tap } from 'rxjs/operators';\nimport { logout } from 'src/app/store/actions/auth.actions';\nimport { AppState } from 'src/app/store/app.state';\nimport { getIsAuth } from 'src/app/store/reducers/auth.reducer';\n\n@Component({\n  selector: 'app-sidenav',\n  templateUrl: './sidenav.component.html',\n  styleUrls: ['./sidenav.component.scss']\n})\nexport class SidenavComponent implements OnInit, OnDestroy {\n\n  @Output() closeSidenav = new EventEmitter();\n  isAuth: boolean;\n  authSub: Subscription;\n\n  constructor(private store: Store<AppState>) { }\n\n  ngOnDestroy(): void {\n    this.authSub.unsubscribe();\n  }\n\n  ngOnInit() {\n    this.authSub = this.store.select(getIsAuth).subscribe(isAuth => this.isAuth = isAuth);\n  }\n\n  onLogout() {\n    this.store.dispatch(logout());\n    this.closeSidenav.emit();\n  }\n\n  onClose() {\n    this.closeSidenav.emit();\n  }\n}\n","<mat-nav-list>\n  <a mat-list-item [routerLink]=\"[ '/']\" (click)=\"onClose()\">\n    Home\n  </a>\n  <a *ngIf=\"isAuth\" mat-list-item [routerLink]=\"[ '/create']\" (click)=\"onClose()\">\n    New Post\n  </a>\n  <a *ngIf=\"!isAuth\" mat-list-item [routerLink]=\"['/auth/login']\" (click)=\"onClose()\">\n    Login\n  </a>\n  <a *ngIf=\"!isAuth\" mat-list-item [routerLink]=\"[ '/auth/signup']\" (click)=\"onClose()\">\n    Signup\n  </a>\n  <a *ngIf=\"isAuth\" mat-list-item (click)=\"onLogout()\">\n    <mat-icon>power_settings_new</mat-icon>&nbsp;&nbsp;\n    Logout\n  </a>\n</mat-nav-list>\n","import { NgModule } from '@angular/core';\n\nimport { MatCardModule } from '@angular/material/card';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatSidenavModule } from '@angular/material/sidenav';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatToolbarModule } from '@angular/material/toolbar';\nimport { MatMenuModule } from '@angular/material/menu';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatListModule } from '@angular/material/list';\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\nimport { MatTooltipModule } from '@angular/material/tooltip';\nimport { MatProgressBarModule } from '@angular/material/progress-bar';\n\n\n\n@NgModule({\n  exports: [\n    MatCardModule,\n    MatButtonModule,\n    MatSidenavModule,\n    MatIconModule,\n    MatToolbarModule,\n    MatMenuModule,\n    MatInputModule,\n    MatFormFieldModule,\n    MatListModule,\n    MatProgressSpinnerModule,\n    MatTooltipModule,\n    MatProgressBarModule\n  ]\n})\nexport class MaterialModule { }\n","export interface User {\r\n  id?: string;\r\n  email?: string;\r\n  password?: string;\r\n  token?: string;\r\n  expiresIn?: number;\r\n}\r\n\r\nexport interface Post {\r\n  _id?: string;\r\n  title: string;\r\n  content: string;\r\n  imagePath?: string;\r\n  date?: string;\r\n}\r\n\r\nexport enum UploadStatus {\r\n  Ready = 'Ready',\r\n  Requested = 'Requested',\r\n  Started = 'Started',\r\n  Failed = 'Failed',\r\n  Completed = 'Completed'\r\n}\r\n\r\nexport interface PostsResponse {\r\n  message?: string;\r\n  posts: Array<any>;\r\n  postsCount?: number;\r\n}\r\n","import { createAction, props } from '@ngrx/store';\r\nimport { User } from '../../model/auth.interface';\r\n\r\n\r\nexport const featureKey = 'auth';\r\n\r\nexport const loginRequest = createAction(`[${featureKey}] loginRequest`, props<{ payload: User }>());\r\nexport const loginSuccess = createAction(`[${featureKey}] loginSuccess`, props<{ token: string, email: string }>());\r\nexport const loginFailure = createAction(`[${featureKey}] loginFailure`, props<{ error: string }>());\r\n\r\nexport const createUserRequest = createAction(`[${featureKey}] createUserRequest`, props<{ payload: User }>());\r\nexport const createUserSuccess = createAction(`[${featureKey}] createUserSuccess`);\r\nexport const createUserFailure = createAction(`[${featureKey}] createUserFailure`, props<{ error: string }>());\r\n\r\nexport const authTrue = createAction(`[${featureKey}] authTrue`);\r\nexport const authFalse = createAction(`[${featureKey}] authFalse`);\r\n\r\nexport const logout = createAction(`[${featureKey}] logout`);\r\n","import { createAction, props } from '@ngrx/store';\r\nimport { Post, PostsResponse } from '../../model/auth.interface';\r\n\r\n\r\nexport const featureKey = 'post';\r\n\r\nexport const addPostRequest = createAction(`[${featureKey}] addPostRequest`, props<{ payload: Post, imagePath: Array<File> }>());\r\nexport const addPostSuccess = createAction(`[${featureKey}] addPostSuccess`);\r\nexport const addPostFailure = createAction(`[${featureKey}] addPostFailure`, props<{ error: string }>());\r\n\r\n\r\nexport const getPostsRequest = createAction(`[${featureKey}] getPostsRequest`,\r\n  props<{ postsPerPage: number, currentPage: number }>());\r\nexport const getPostsSuccess = createAction(`[${featureKey}] getPostsSuccess`, props<{ payload: PostsResponse }>());\r\nexport const getPostsFailure = createAction(`[${featureKey}] getPostsFailure`, props<{ error: string }>());\r\n\r\n\r\n\r\nexport const getPostRequest = createAction(`[${featureKey}] getPostRequest`, props<{ id: string }>());\r\nexport const getPostSuccess = createAction(`[${featureKey}] getPostSuccess`, props<{ payload: Post }>());\r\nexport const getPostFailure = createAction(`[${featureKey}] getPostFailure`, props<{ error: string }>());\r\n\r\nexport const cancelUpload = createAction(`[${featureKey}] cancelUpload`);\r\nexport const startedUpload = createAction(`[${featureKey}] startedUpload`);\r\nexport const resetUpload = createAction(`[${featureKey}] resetUpload`);\r\nexport const progressUpload = createAction(`[${featureKey}] progressUpload`, props<{ progress: number }>());\r\nexport const completedUpload = createAction(`[${featureKey}] completedUpload`);\r\nexport const uploadFailure = createAction(`[${featureKey}] uploadFailure`, props<{ errorMessage: string }>());\r\n\r\nexport const globalSuccess = createAction(`[${featureKey}] globalSuccess`, props<{ message: string }>());\r\nexport const globalError = createAction(`[${featureKey}] globalError`, props<{ error: string }>());\r\n","import * as authState from './reducers/auth.reducer';\r\nimport * as postState from './reducers/post.reducer';\r\n\r\nexport interface AppState {\r\n  authState: authState.State;\r\n  postState: postState.State;\r\n}\r\n\r\nexport const reducers = {\r\n  auth: authState.reducer,\r\n  post: postState.reducer\r\n};\r\n","import { Injectable } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { AuthService } from '../../endpoint/auth.service';\r\nimport { createEffect, ofType, Actions } from '@ngrx/effects';\r\nimport {\r\n  loginRequest,\r\n  loginSuccess,\r\n  loginFailure,\r\n  logout,\r\n  createUserRequest,\r\n  createUserSuccess,\r\n  createUserFailure\r\n} from '../actions/auth.actions';\r\nimport { map, mergeMap, catchError, tap } from 'rxjs/operators';\r\nimport { of } from 'rxjs';\r\n\r\n@Injectable()\r\nexport class AuthEffects {\r\n\r\n  constructor(\r\n    private actions$: Actions,\r\n    private router: Router,\r\n    private auth: AuthService) { }\r\n\r\n  CreateUserRequest$ = createEffect(() => {\r\n    return this.actions$.pipe(\r\n      ofType(createUserRequest),\r\n      map(action => action.payload),\r\n      mergeMap((data) =>\r\n        this.auth.createUser(data.email, data.password).pipe(\r\n          tap(x => console.log('res ', x)),\r\n          map(res => createUserSuccess()),\r\n          catchError(error => of(createUserFailure({ error })\r\n          )))\r\n      ),\r\n    );\r\n  });\r\n\r\n  CreateUserSuccess$ = createEffect(() => {\r\n    return this.actions$.pipe(\r\n      ofType(createUserSuccess),\r\n      tap((user) => {\r\n        this.router.navigate(['auth/login']);\r\n      }));\r\n  }, { dispatch: false });\r\n\r\n  LoginRequest$ = createEffect(() => {\r\n    return this.actions$.pipe(\r\n      ofType(loginRequest),\r\n      map(action => action.payload),\r\n      mergeMap((data) =>\r\n        this.auth.login(data.email, data.password).pipe(\r\n          map(res => loginSuccess({ token: res.token, email: res.email })),\r\n          catchError(error => of(loginFailure({ error })\r\n          )))\r\n      ),\r\n    );\r\n  });\r\n\r\n  LoginSuccess$ = createEffect(() => {\r\n    return this.actions$.pipe(\r\n      ofType(loginSuccess),\r\n      tap((user) => {\r\n        localStorage.setItem('token', user.token);\r\n        this.router.navigate(['/']);\r\n      }));\r\n  }, { dispatch: false });\r\n\r\n\r\n  Logout$ = createEffect(() => {\r\n    return this.actions$.pipe(\r\n      ofType(logout),\r\n      tap(() => {\r\n        localStorage.removeItem('token');\r\n        this.router.navigate(['auth/login']);\r\n      }));\r\n  }, { dispatch: false });\r\n\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { Actions, createEffect, ofType } from '@ngrx/effects';\r\nimport { Router } from '@angular/router';\r\nimport { map, catchError, mergeMap, concatMap, takeUntil, switchMap, tap, withLatestFrom } from 'rxjs/operators';\r\nimport { of, EMPTY } from 'rxjs';\r\nimport { HttpEvent, HttpEventType } from '@angular/common/http';\r\nimport { TypedAction } from '@ngrx/store/src/models';\r\nimport { AppState } from '../app.state';\r\nimport { Store } from '@ngrx/store';\r\nimport { PostsService } from '../../endpoint/posts.service';\r\nimport {\r\n  addPostFailure,\r\n  addPostRequest,\r\n  addPostSuccess,\r\n  cancelUpload,\r\n  completedUpload,\r\n  getPostsFailure,\r\n  getPostsRequest,\r\n  getPostsSuccess,\r\n  progressUpload,\r\n  startedUpload,\r\n  uploadFailure\r\n} from '../actions/post.actions';\r\n\r\n\r\n@Injectable()\r\nexport class PostsEffects {\r\n\r\n  constructor(\r\n    private actions$: Actions,\r\n    private router: Router,\r\n    private store: Store<AppState>,\r\n    private postService: PostsService) { }\r\n\r\n  AddPostRequest$ = createEffect(() => {\r\n    return this.actions$.pipe(\r\n      ofType(addPostRequest),\r\n      concatMap((action) =>\r\n        this.postService.addPost(action.payload, action.imagePath).pipe(\r\n          takeUntil(this.actions$.pipe(\r\n            ofType(cancelUpload)\r\n          )),\r\n          switchMap(event => this.getActionHttpEvent(event, addPostSuccess)),\r\n          catchError(error => of(addPostFailure({ error })))\r\n        )\r\n      )\r\n    );\r\n  });\r\n\r\n  OnAddPostSuccess$ = createEffect(() => {\r\n    return this.actions$.pipe(\r\n      ofType(addPostSuccess),\r\n      tap(() => this.router.navigate(['/'])));\r\n  }, { dispatch: false });\r\n\r\n  GetPostsRequest$ = createEffect(() => {\r\n    return this.actions$.pipe(\r\n      ofType(getPostsRequest),\r\n      mergeMap((action) =>\r\n        this.postService.getPosts(action.postsPerPage, action.currentPage).pipe(\r\n          map(data => {\r\n            return getPostsSuccess({ payload: data });\r\n          }\r\n          ),\r\n          catchError(error => of(getPostsFailure({ error }))))\r\n      ),\r\n    );\r\n  });\r\n\r\n\r\n\r\n  // GetPropertyRequest$ = createEffect(() => {\r\n  //   return this.actions$.pipe(\r\n  //     ofType(getPropertyRequest),\r\n  //     map(action => action.id),\r\n  //     mergeMap((id) =>\r\n  //       this.postService.getProperty(id).pipe(\r\n  //         map(data => getPropertySuccess({ payload: data })),\r\n  //         catchError(error => of(getPropertyFailure({ error }))))\r\n  //     ),\r\n  //   );\r\n  // });\r\n\r\n\r\n\r\n  getActionHttpEvent(event: HttpEvent<any>, refresh?: () => TypedAction<string>) {\r\n    switch (event.type) {\r\n      case HttpEventType.Sent:\r\n        return [startedUpload()];\r\n      case HttpEventType.UploadProgress:\r\n        return [progressUpload({ progress: Math.round((100 * event.loaded) / event.total) })];\r\n      case HttpEventType.ResponseHeader:\r\n      case HttpEventType.Response:\r\n        if (event.status === 201) {\r\n          return [completedUpload(), refresh()];\r\n        } else {\r\n          return [uploadFailure({ errorMessage: event.statusText })];\r\n        }\r\n\r\n      default:\r\n        return [uploadFailure({ errorMessage: 'An unknown error occurred' })];\r\n    }\r\n  }\r\n\r\n}\r\n","import { User } from 'src/app/model/auth.interface';\r\nimport { createReducer, Action, on, createFeatureSelector, createSelector } from '@ngrx/store';\r\nimport * as authActions from '../actions/auth.actions';\r\n\r\nexport interface State {\r\n  isAuthenticated: boolean;\r\n  user: User | null;\r\n  error: string | null;\r\n  loading: boolean;\r\n}\r\n\r\nexport const initialState: State = {\r\n  isAuthenticated: false,\r\n  user: null,\r\n  error: null,\r\n  loading: false\r\n};\r\n\r\n\r\nconst authReducer = createReducer(\r\n  initialState,\r\n  on(authActions.loginRequest, (state: State) => ({ ...state, error: null, loading: true })),\r\n  on(authActions.loginSuccess, (state: State, { token, email }) => (\r\n    {\r\n      ...state,\r\n      isAuthenticated: true,\r\n      user: {\r\n        token,\r\n        email\r\n      },\r\n      error: null,\r\n      loading: false\r\n    })),\r\n  on(authActions.loginFailure, (state: State, { error }) => ({ ...state, loading: false, error: 'Incorrect email or password.' })),\r\n  on(authActions.authTrue, (state: State) => ({ ...state, isAuthenticated: true })),\r\n  on(authActions.authFalse, (state: State) => ({ ...state, isAuthenticated: false })),\r\n  on(authActions.logout, () => initialState),\r\n);\r\n\r\nexport function reducer(state: State | undefined, action: Action) {\r\n  return authReducer(state, action);\r\n}\r\n\r\nconst authState = createFeatureSelector<State>(authActions.featureKey);\r\n\r\nexport const getIsAuth = createSelector(authState, state => state.isAuthenticated);\r\nexport const isLoadingAuth = createSelector(authState, state => state.loading);\r\n","import { createReducer, Action, on, createFeatureSelector, createSelector } from '@ngrx/store';\r\nimport * as postActions from '../actions/post.actions';\r\nimport { logout } from '../actions/auth.actions';\r\nimport { Post, UploadStatus } from '../../model/auth.interface';\r\n\r\nexport interface State {\r\n  posts: Array<Post>;\r\n  post: Post;\r\n  totalPosts: number;\r\n  postsPerPage: number;\r\n  page: number;\r\n  uploadStatus: UploadStatus;\r\n  progress: number;\r\n  error: string;\r\n  loading: boolean;\r\n}\r\n\r\nexport const initialState: State = {\r\n  posts: [],\r\n  post: null,\r\n  totalPosts: 0,\r\n  postsPerPage: 8,\r\n  page: 1,\r\n  uploadStatus: UploadStatus.Ready,\r\n  progress: null,\r\n  error: null,\r\n  loading: false\r\n};\r\n\r\nconst propertyReducer = createReducer(\r\n  initialState,\r\n  on(postActions.addPostRequest, (state: State, { payload }) => (\r\n    {\r\n      ...state,\r\n      loading: true\r\n    }\r\n  )),\r\n  on(postActions.addPostSuccess, (state: State) => (\r\n    {\r\n      ...state,\r\n      loading: false,\r\n      error: null\r\n    }\r\n  )),\r\n  on(postActions.getPostSuccess, (state: State, { payload }) => (\r\n    {\r\n      ...state,\r\n      post: payload,\r\n      loading: false,\r\n      error: null\r\n    }\r\n  )),\r\n  on(postActions.getPostsSuccess, (state: State, { payload }) => (\r\n    {\r\n      ...state,\r\n      posts: payload.posts,\r\n      totalPosts: payload.postsCount\r\n    }\r\n  )),\r\n  on(postActions.cancelUpload, (state) => ({ ...state, uploadStatus: UploadStatus.Ready, progress: null })),\r\n  on(postActions.startedUpload, (state) => ({ ...state, uploadStatus: UploadStatus.Started, progress: 0 })),\r\n  on(postActions.progressUpload, (state, { progress }) => ({ ...state, progress })),\r\n  on(postActions.completedUpload, (state) => ({ ...state, uploadStatus: UploadStatus.Ready, progress: 0 })),\r\n  on(postActions.uploadFailure, (state, { errorMessage }) => (\r\n    { ...state, uploadStatus: UploadStatus.Failed, progress: null, error: errorMessage })),\r\n  on(logout, () => initialState),\r\n);\r\n\r\nexport function reducer(state: State | undefined, action: Action) {\r\n  return propertyReducer(state, action);\r\n}\r\n\r\nconst postsState = createFeatureSelector<State>(postActions.featureKey);\r\n\r\nexport const getPosts = createSelector(postsState, state => state.posts);\r\nexport const getPost = createSelector(postsState, state => state.post);\r\nexport const getPostsPerPage = createSelector(postsState, state => state.postsPerPage);\r\nexport const getPage = createSelector(postsState, state => state.page);\r\nexport const isLoadingPost = createSelector(postsState, state => state.loading);\r\nexport const getTotalPosts = createSelector(postsState, state => state.totalPosts);\r\n\r\nexport const getStarted = createSelector(postsState, (state: State): boolean => state.uploadStatus === UploadStatus.Started);\r\nexport const getRequested = createSelector(postsState, (state: State): boolean => state.uploadStatus === UploadStatus.Requested);\r\nexport const getReady = createSelector(postsState, (state: State): boolean => state.uploadStatus === UploadStatus.Ready);\r\nexport const getProgress = createSelector(postsState, (state: State) => state.progress);\r\nexport const getFailed = createSelector(postsState, (state: State): boolean => state.uploadStatus === UploadStatus.Failed);\r\nexport const getCompleted = createSelector(postsState, (state: State): boolean => state.uploadStatus === UploadStatus.Completed);\r\nexport const getInProgress = createSelector(postsState,\r\n  (state: State): boolean => state.progress >= 0 && state.uploadStatus === UploadStatus.Started);\r\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false,\n  apiUrl: 'http://localhost:3000/api'\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"]}