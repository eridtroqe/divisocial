{"version":3,"sources":["webpack:///src/app/modules/auth/auth.module.ts","webpack:///src/app/modules/auth/login/login.component.ts","webpack:///src/app/modules/auth/login/login.component.html","webpack:///src/app/modules/auth/sign-up/sign-up.component.ts","webpack:///src/app/modules/auth/sign-up/sign-up.component.html"],"names":["routes","path","component","AuthModule","forChild","imports","declarations","exports","LoginComponent","store","isLoading","loadingSub","unsubscribe","select","subscribe","loading","form","invalid","userForm","email","value","password","dispatch","payload","selector","templateUrl","styleUrls","SignUpComponent"],"mappings":"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","file":"modules-auth-auth-module-es5.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { RouterModule, Routes } from '@angular/router';\nimport { LoginComponent } from './login/login.component';\nimport { SignUpComponent } from './sign-up/sign-up.component';\nimport { MaterialModule } from '../../material/material.module';\nimport { FormsModule } from '@angular/forms';\n\nconst routes: Routes = [\n  { path: 'login', component: LoginComponent },\n  { path: 'signup', component: SignUpComponent },\n];\n\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    MaterialModule,\n    RouterModule.forChild(routes)\n  ],\n  declarations: [LoginComponent, SignUpComponent],\n  exports: [RouterModule]\n})\nexport class AuthModule { }\n","import { Component, OnDestroy, OnInit } from '@angular/core';\nimport { NgForm } from '@angular/forms';\nimport { Store } from '@ngrx/store';\nimport { Subscription } from 'rxjs';\nimport { isLoadingAuth } from 'src/app/store/reducers/auth.reducer';\nimport { User } from '../../../model/auth.interface';\nimport { loginRequest } from '../../../store/actions/auth.actions';\nimport { AppState } from '../../../store/app.state';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.scss']\n})\nexport class LoginComponent implements OnInit, OnDestroy {\n\n  isLoading = false;\n  loadingSub: Subscription;\n\n  constructor(private store: Store<AppState>) { }\n\n  ngOnDestroy(): void {\n    this.loadingSub.unsubscribe();\n  }\n\n  ngOnInit() {\n    this.loadingSub = this.store\n      .select(isLoadingAuth)\n      .subscribe(loading => this.isLoading = loading);\n  }\n\n  onLogin(form: NgForm) {\n    if (form.invalid) {\n      return;\n    }\n    const userForm: User = {\n      email: form.value.email,\n      password: form.value.password\n    };\n    this.store.dispatch(loginRequest({ payload: userForm }));\n  }\n\n}\n","<div class=\"container\">\n  <div class=\"row\">\n    <div class=\"col-md-6 m-auto\">\n      <mat-card class=\"mat-elevation-z10\">\n        <mat-spinner *ngIf=\"isLoading\"></mat-spinner>\n        <form (submit)=\"onLogin(loginForm)\" #loginForm=\"ngForm\" *ngIf=\"!isLoading\">\n          <mat-form-field>\n            <input matInput name=\"email\" ngModel type=\"email\" placeholder=\"E-Mail\" #emailInput=\"ngModel\" required email>\n            <mat-error *ngIf=\"emailInput.invalid\">Please enter a valid email.</mat-error>\n          </mat-form-field>\n          <mat-form-field>\n            <input type=\"password\" name=\"password\" ngModel matInput placeholder=\"Password\" #passwordInput=\"ngModel\"\n              required>\n            <mat-error *ngIf=\"passwordInput.invalid\">Please enter a valid password.</mat-error>\n          </mat-form-field>\n          <button mat-raised-button color=\"accent\" type=\"submit\" *ngIf=\"!isLoading\">Login</button>\n        </form>\n      </mat-card>\n    </div>\n\n  </div>\n</div>\n","import { Component, OnDestroy, OnInit } from '@angular/core';\nimport { NgForm } from '@angular/forms';\nimport { Store } from '@ngrx/store';\nimport { Subscription } from 'rxjs';\nimport { isLoadingAuth } from 'src/app/store/reducers/auth.reducer';\nimport { User } from '../../../model/auth.interface';\nimport { createUserRequest } from '../../../store/actions/auth.actions';\nimport { AppState } from '../../../store/app.state';\n\n@Component({\n  selector: 'app-sign-up',\n  templateUrl: './sign-up.component.html',\n  styleUrls: ['./sign-up.component.scss']\n})\nexport class SignUpComponent implements OnInit, OnDestroy {\n\n  isLoading = false;\n  loadingSub: Subscription;\n\n  constructor(private store: Store<AppState>) { }\n\n  ngOnInit() {\n    this.loadingSub = this.store\n      .select(isLoadingAuth)\n      .subscribe(loading => this.isLoading = loading);\n  }\n\n  ngOnDestroy(): void {\n    this.loadingSub.unsubscribe();\n  }\n\n  onSignup(form: NgForm) {\n    if (form.invalid) {\n      return;\n    }\n    const userForm: User = {\n      email: form.value.email,\n      password: form.value.password\n    };\n    this.store.dispatch(createUserRequest({ payload: userForm }));\n  }\n\n}\n","<div class=\"container\">\n  <div class=\"row\">\n    <div class=\"col-md-6 m-auto\">\n      <mat-card class=\"mat-elevation-z10\">\n        <mat-spinner *ngIf=\"isLoading\"></mat-spinner>\n        <form (submit)=\"onSignup(signupForm)\" #signupForm=\"ngForm\" *ngIf=\"!isLoading\">\n          <mat-form-field>\n            <input matInput name=\"email\" ngModel type=\"email\" placeholder=\"E-Mail\" #emailInput=\"ngModel\" required email>\n            <mat-error *ngIf=\"emailInput.invalid\">Please enter a valid email.</mat-error>\n          </mat-form-field>\n          <mat-form-field>\n            <input type=\"password\" name=\"password\" ngModel matInput placeholder=\"Password\" #passwordInput=\"ngModel\"\n              required>\n            <mat-error *ngIf=\"passwordInput.invalid\">Please enter a valid password.</mat-error>\n          </mat-form-field>\n          <button mat-raised-button color=\"accent\" type=\"submit\" *ngIf=\"!isLoading\">Signup</button>\n        </form>\n      </mat-card>\n    </div>\n  </div>\n</div>\n"]}